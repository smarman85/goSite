{{define "yield"}}
<div class="content-block">
  <h1>Argocd App of Apps</h1>
  <p class="content">
    GitOps has taken the operations world by storm. Having your application deployment information in once place, gives companies and engineers alike
    a better holistic view of the their environments. GitOps seeks to simplify the code deployment process by having every interaction based on a git     commit. This is a huge win for the Infrastructure deployment community.  
  </p>
  <p class="content">
    Tools like argoprojects argo-cd makes the shift to gitops fairly straight forward. Their solution is tailored for deploying applications into any
    kubernetes based environment. Once you have Argo CD <a href="https://argoproj.github.io/argo-cd/getting_started/">installed and running</a>, you 
    can start spinning up applications with just a few lines of YAML. Right now we are going to take a look at a very powerful design pattern in Argo 
    CD, the App of Apps pattern, which allows you to boot strap entire clusters in seconds. The initial <a href="https://argoproj.github.io/argo-cd/operator-manual/cluster-bootstrapping/">documentation</a> does a great job at introducing the design pattern, but here are some of the things I learned 
    while working with Argo CD.
  </p>
  {{ template "codeblock-start" }}
    ---
    <span class="c">apiVersion:</span> argoproj.io/v1alpha1
    <span class="c">kind:</span> Application
    <span class="c">metadata:</span>
      <span class="c">name:</span> homelab
      <span class="c">namespace:</span> argocd
    <span class="c">spec:</span>
      <span class="c">project:</span> default
      <span class="c">source:</span>
        <span class="c">repoURL:</span> https://github.com/smarman85/argoapps
        <span class="c">path:</span> apps
        <span class="c">targetRevision:</span> HEAD
      <span class="c">destination:</span>
        <span class="c">server:</span> https://kubernetes.default.svc
        <span class="c">namespace:</span> argoapps
      <span class="c">syncPolicy:</span>
        <span class="c">automated:</span> {}
  {{ template "codeblock-end" }}
  <p class="content">
    Everything in Argo CD is an application. What makes this one special is the chart under spec.source.repoURL. This chart is where you will
    define the applications and any overrides they will need to spin up. It's worth noting that this example uses helm, but Argo CD integrates
    extremely well with other main stream chart builders like Kustomize and Ksonnett. The chat apps inside the git repo argoapps, builds
    additional leaf application that argo will apply to the cluster. For a small example, at the time of this writing, the chart only builds one
    Application crd show below. 
  </p>
  {{ template "codeblock-start" }}
    ---
    # Source: applications/templates/applications.yaml
    <span class="c">apiVersion:</span> argoproj.io/v1alpha1
    <span class="c">kind:</span> Application
    <span class="c">metadata:</span>
      <span class="c">name:</span> gosite
      <span class="c">namespace:</span> argocd
    <span class="c">spec:</span>
      <span class="c">syncPolicy:</span>
        <span class="c">automated:</span> {}
      <span class="c">destination:</span>
        <span class="c">namespace:</span> argoapps
        <span class="c">server:</span> https://kubernetes.default.svc
      <span class="c">project:</span> default
      <span class="c">source:</span>
        <span class="c">helm:</span>
          <span class="c">valueFiles:</span>
            - overrides/gosite.yaml
          <span class="c">parameters:</span>
            - <span class="c">name:</span> env
              <span class="c">value:</span> homelab
            - <span class="c">name:</span> val
              <span class="c">value:</span> testing
            - <span class="c">name:</span> version
              <span class="c">value:</span> 0.0.7
        <span class="c">repoURL:</span> https://smarman85.github.io/charts/
        <span class="c">chart:</span> basicChart
        <span class="c">targetRevision:</span> 0.0.3
  {{ template "codeblock-end" }}
  <p class="content">
    This should be all that's needed to get this design pattern up and running...
  </p>
</div>
{{end}}
